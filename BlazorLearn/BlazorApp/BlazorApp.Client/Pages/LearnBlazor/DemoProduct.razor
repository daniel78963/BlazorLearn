@page "/learnBlazor/demoProduct" 
@rendermode InteractiveAuto

<h2 class="text-primary">Demo Product</h2>
<div class="p-2 mt-2">
    <div class="row">
        @foreach (var prod in products)
        {
            <div class="bg-light border col-6">
                <h4 class="text-secondary">Product - @prod.Id</h4>
                Name - @prod.Name <br />
                Show Properties:
                <input type="checkbox" @bind="prod.IsActive" />

                @if(prod.IsActive)
                {
                    @foreach (var prodProp in prod.ProductProperties)
                    {
                        <p>@prodProp.Key - @prodProp.Value</p>
                    }
                }
                <br />
                <input type="button" class="btn btn-danger" style="width:100px" value="Delete" @onclick="()=>RemoveProduct(prod.Id)" />
            </div>
        }
    </div>
    <div class="row pt-4"> 
        <input type="button" class="btn btn-success" style="width:100px" value="Counter" @onclick="() => IncrementCount(5)" /><br />
        Counter: @Count <br />
    </div>
</div>

@code {
    public int Count { get; set; } = 0;

    List<Blazor.Model.LearnBlazor.Product> products = new List<Blazor.Model.LearnBlazor.Product>();

    protected override void OnInitialized()
    {
        products.Add(new Blazor.Model.LearnBlazor.Product()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 5.99m,
            ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
        });

        products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.59m,
            ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new Product_Prop {Id = 3,Key = "Color",Value = "White"}
                }
        });
    }

    private void IncrementCount(int increment)
    {
        Count+= increment;
    }

    private void RemoveProduct(int id)
    {
        var prod = products.FirstOrDefault(p => p.Id == id);
        if (prod != null)
        {
            products.Remove(prod);
        }
    }
}
