@page "/learnBlazor/product"
@rendermode InteractiveAuto
@using Blazor.Model.LearnBlazor

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        Active: @(product.IsActive ? "Yes" : "No")
        <br />
        Input Price:
        <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" />
        <br />
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var prop in product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key - @prop.Value</option>
            }
        </select>
        <br />
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name: @product.Name
        <br />
        Price: @product.Price.ToString("C")
        <br />
        Description: @product.Description
        <br />
        Selected Property: @selectedProp
        <br />
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            <p>Selected value: @product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }
    </div>
    <div class="col-12 p-4">
        <h2 class="text-success">Product List</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Is Active</th>
                    @* <th>Properties</th> *@
                </tr>
            </thead>
            <tbody>
                @foreach (var p in products)
                {
                    <tr>
                        <td><input type="text" @bind="p.Name" @bind:event="oninput" /></td>
                        <td><input type="text" @bind="p.Price" @bind:event="oninput" /></td>
                        <td><input type="checkbox" @bind="p.IsActive" /></td> 
                       @*  <td>@p.Price.ToString("C")</td>
                        <td>@(p.IsActive ? "Active" : "Inactive")</td>
                        <td>
                            <ul>
                                @foreach (var prop in p.ProductProperties)
                                {
                                    <li>@prop.Key: @prop.Value</li>
                                }
                            </ul>
                        </td> *@
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {

    private string selectedProp = string.Empty;

    Blazor.Model.LearnBlazor.Product product = new Blazor.Model.LearnBlazor.Product
    {
        Name = "Sample Product",
        Price = 19.99m,
        Description = "This is a sample product description.",
        IsActive = true,
        ProductProperties = new List<Blazor.Model.LearnBlazor.Product_Prop>
        {
            new Product_Prop { Id = 1, Key = "Color", Value = "Red" },
            new Product_Prop { Id=2, Key = "Size", Value = "Medium" },
            new Product_Prop { Id=3, Key = "Flavor", Value = "Rose" }
        }
    };

    List<Blazor.Model.LearnBlazor.Product> products = new List<Blazor.Model.LearnBlazor.Product>();

    protected override void OnInitialized()
    {
        products.Add(new Blazor.Model.LearnBlazor.Product()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 5.99m,
            ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
        });

        products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.59m,
            ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new Product_Prop {Id = 3,Key = "Color",Value = "White"}
                }
        });
    }
}

