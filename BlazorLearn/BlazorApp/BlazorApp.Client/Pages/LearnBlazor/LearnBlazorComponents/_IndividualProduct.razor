<div class="bg-light border col-6">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorites <br /><br />

    Name - @Product.Name <br />
    Show Properties:
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    @* <input type="button" class="btn btn-danger" style="width:100px" value="Delete" @onclick="()=>RemoveProduct(prod.Id)" /> *@
    <_DeleteButtonComponent Id="@Product.Id" ProductName="@Product.Name">

    </_DeleteButtonComponent>
</div>

@code {
    [Parameter]
    public Product Product { get; set; } = new Product();

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs args)
    { 
        await OnFavoriteUpdated.InvokeAsync((bool)(args.Value??false)); 
    } 
}
